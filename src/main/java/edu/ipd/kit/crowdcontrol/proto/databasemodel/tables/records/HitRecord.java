/**
 * This class is generated by jOOQ
 */
package edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HitRecord extends org.jooq.impl.UpdatableRecordImpl<edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.records.HitRecord> implements org.jooq.Record8<java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer> {

	private static final long serialVersionUID = -1174421011;

	/**
	 * Setter for <code>crowdcontrolproto.HIT.idHIT</code>.
	 */
	public void setIdhit(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.HIT.idHIT</code>.
	 */
	public java.lang.Integer getIdhit() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>crowdcontrolproto.HIT.experiment_h</code>.
	 */
	public void setExperimentH(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.HIT.experiment_h</code>.
	 */
	public java.lang.Integer getExperimentH() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>crowdcontrolproto.HIT.type</code>.
	 */
	public void setType(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.HIT.type</code>.
	 */
	public java.lang.String getType() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>crowdcontrolproto.HIT.running</code>.
	 */
	public void setRunning(java.lang.Boolean value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.HIT.running</code>.
	 */
	public java.lang.Boolean getRunning() {
		return (java.lang.Boolean) getValue(3);
	}

	/**
	 * Setter for <code>crowdcontrolproto.HIT.current_amount</code>.
	 */
	public void setCurrentAmount(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.HIT.current_amount</code>.
	 */
	public java.lang.Integer getCurrentAmount() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>crowdcontrolproto.HIT.max_amount</code>.
	 */
	public void setMaxAmount(java.lang.Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.HIT.max_amount</code>.
	 */
	public java.lang.Integer getMaxAmount() {
		return (java.lang.Integer) getValue(5);
	}

	/**
	 * Setter for <code>crowdcontrolproto.HIT.payment</code>.
	 */
	public void setPayment(java.lang.Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.HIT.payment</code>.
	 */
	public java.lang.Integer getPayment() {
		return (java.lang.Integer) getValue(6);
	}

	/**
	 * Setter for <code>crowdcontrolproto.HIT.bonus</code>.
	 */
	public void setBonus(java.lang.Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.HIT.bonus</code>.
	 */
	public java.lang.Integer getBonus() {
		return (java.lang.Integer) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Boolean, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer> valuesRow() {
		return (org.jooq.Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Hit.HIT.IDHIT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Hit.HIT.EXPERIMENT_H;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Hit.HIT.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field4() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Hit.HIT.RUNNING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Hit.HIT.CURRENT_AMOUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field6() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Hit.HIT.MAX_AMOUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field7() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Hit.HIT.PAYMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field8() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Hit.HIT.BONUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getIdhit();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getExperimentH();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value4() {
		return getRunning();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getCurrentAmount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value6() {
		return getMaxAmount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value7() {
		return getPayment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value8() {
		return getBonus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HitRecord value1(java.lang.Integer value) {
		setIdhit(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HitRecord value2(java.lang.Integer value) {
		setExperimentH(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HitRecord value3(java.lang.String value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HitRecord value4(java.lang.Boolean value) {
		setRunning(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HitRecord value5(java.lang.Integer value) {
		setCurrentAmount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HitRecord value6(java.lang.Integer value) {
		setMaxAmount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HitRecord value7(java.lang.Integer value) {
		setPayment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HitRecord value8(java.lang.Integer value) {
		setBonus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HitRecord values(java.lang.Integer value1, java.lang.Integer value2, java.lang.String value3, java.lang.Boolean value4, java.lang.Integer value5, java.lang.Integer value6, java.lang.Integer value7, java.lang.Integer value8) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached HitRecord
	 */
	public HitRecord() {
		super(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Hit.HIT);
	}

	/**
	 * Create a detached, initialised HitRecord
	 */
	public HitRecord(java.lang.Integer idhit, java.lang.Integer experimentH, java.lang.String type, java.lang.Boolean running, java.lang.Integer currentAmount, java.lang.Integer maxAmount, java.lang.Integer payment, java.lang.Integer bonus) {
		super(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Hit.HIT);

		setValue(0, idhit);
		setValue(1, experimentH);
		setValue(2, type);
		setValue(3, running);
		setValue(4, currentAmount);
		setValue(5, maxAmount);
		setValue(6, payment);
		setValue(7, bonus);
	}
}
