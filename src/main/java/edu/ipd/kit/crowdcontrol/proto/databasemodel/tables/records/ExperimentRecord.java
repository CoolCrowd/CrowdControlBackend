/**
 * This class is generated by jOOQ
 */
package edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExperimentRecord extends org.jooq.impl.UpdatableRecordImpl<edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.records.ExperimentRecord> implements org.jooq.Record9<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Object, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.String> {

	private static final long serialVersionUID = 1483121835;

	/**
	 * Setter for <code>crowdcontrolproto.Experiment.idexperiment</code>.
	 */
	public void setIdexperiment(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.Experiment.idexperiment</code>.
	 */
	public java.lang.Integer getIdexperiment() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>crowdcontrolproto.Experiment.picture_url</code>.
	 */
	public void setPictureUrl(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.Experiment.picture_url</code>.
	 */
	public java.lang.String getPictureUrl() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>crowdcontrolproto.Experiment.picture_license_url</code>.
	 */
	public void setPictureLicenseUrl(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.Experiment.picture_license_url</code>.
	 */
	public java.lang.String getPictureLicenseUrl() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>crowdcontrolproto.Experiment.question</code>.
	 */
	public void setQuestion(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.Experiment.question</code>.
	 */
	public java.lang.String getQuestion() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>crowdcontrolproto.Experiment.rating_options</code>.
	 */
	public void setRatingOptions(java.lang.Object value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.Experiment.rating_options</code>.
	 */
	public java.lang.Object getRatingOptions() {
		return (java.lang.Object) getValue(4);
	}

	/**
	 * Setter for <code>crowdcontrolproto.Experiment.titel</code>.
	 */
	public void setTitel(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.Experiment.titel</code>.
	 */
	public java.lang.String getTitel() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>crowdcontrolproto.Experiment.max_ratings_per_assignment</code>.
	 */
	public void setMaxRatingsPerAssignment(java.lang.Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.Experiment.max_ratings_per_assignment</code>.
	 */
	public java.lang.Integer getMaxRatingsPerAssignment() {
		return (java.lang.Integer) getValue(6);
	}

	/**
	 * Setter for <code>crowdcontrolproto.Experiment.max_answers_per_assignment</code>.
	 */
	public void setMaxAnswersPerAssignment(java.lang.Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.Experiment.max_answers_per_assignment</code>.
	 */
	public java.lang.Integer getMaxAnswersPerAssignment() {
		return (java.lang.Integer) getValue(7);
	}

	/**
	 * Setter for <code>crowdcontrolproto.Experiment.description</code>.
	 */
	public void setDescription(java.lang.String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>crowdcontrolproto.Experiment.description</code>.
	 */
	public java.lang.String getDescription() {
		return (java.lang.String) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Object, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.String> fieldsRow() {
		return (org.jooq.Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Object, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.String> valuesRow() {
		return (org.jooq.Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.IDEXPERIMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.PICTURE_URL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.PICTURE_LICENSE_URL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.QUESTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Object> field5() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.RATING_OPTIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.TITEL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field7() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.MAX_RATINGS_PER_ASSIGNMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field8() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.MAX_ANSWERS_PER_ASSIGNMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field9() {
		return edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getIdexperiment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getPictureUrl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getPictureLicenseUrl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getQuestion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Object value5() {
		return getRatingOptions();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getTitel();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value7() {
		return getMaxRatingsPerAssignment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value8() {
		return getMaxAnswersPerAssignment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value9() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value1(java.lang.Integer value) {
		setIdexperiment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value2(java.lang.String value) {
		setPictureUrl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value3(java.lang.String value) {
		setPictureLicenseUrl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value4(java.lang.String value) {
		setQuestion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value5(java.lang.Object value) {
		setRatingOptions(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value6(java.lang.String value) {
		setTitel(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value7(java.lang.Integer value) {
		setMaxRatingsPerAssignment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value8(java.lang.Integer value) {
		setMaxAnswersPerAssignment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value9(java.lang.String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord values(java.lang.Integer value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, java.lang.Object value5, java.lang.String value6, java.lang.Integer value7, java.lang.Integer value8, java.lang.String value9) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ExperimentRecord
	 */
	public ExperimentRecord() {
		super(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT);
	}

	/**
	 * Create a detached, initialised ExperimentRecord
	 */
	public ExperimentRecord(java.lang.Integer idexperiment, java.lang.String pictureUrl, java.lang.String pictureLicenseUrl, java.lang.String question, java.lang.Object ratingOptions, java.lang.String titel, java.lang.Integer maxRatingsPerAssignment, java.lang.Integer maxAnswersPerAssignment, java.lang.String description) {
		super(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT);

		setValue(0, idexperiment);
		setValue(1, pictureUrl);
		setValue(2, pictureLicenseUrl);
		setValue(3, question);
		setValue(4, ratingOptions);
		setValue(5, titel);
		setValue(6, maxRatingsPerAssignment);
		setValue(7, maxAnswersPerAssignment);
		setValue(8, description);
	}
}
