/**
 * This class is generated by jOOQ
 */
package edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExperimentDao extends org.jooq.impl.DAOImpl<edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.records.ExperimentRecord, edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.pojos.Experiment, java.lang.Integer> {

	/**
	 * Create a new ExperimentDao without any configuration
	 */
	public ExperimentDao() {
		super(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT, edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.pojos.Experiment.class);
	}

	/**
	 * Create a new ExperimentDao with an attached configuration
	 */
	public ExperimentDao(org.jooq.Configuration configuration) {
		super(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT, edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.pojos.Experiment.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Integer getId(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.pojos.Experiment object) {
		return object.getIdexperiment();
	}

	/**
	 * Fetch records that have <code>idexperiment IN (values)</code>
	 */
	public java.util.List<edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.pojos.Experiment> fetchByIdexperiment(java.lang.Integer... values) {
		return fetch(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.IDEXPERIMENT, values);
	}

	/**
	 * Fetch a unique record that has <code>idexperiment = value</code>
	 */
	public edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.pojos.Experiment fetchOneByIdexperiment(java.lang.Integer value) {
		return fetchOne(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.IDEXPERIMENT, value);
	}

	/**
	 * Fetch records that have <code>picture_url IN (values)</code>
	 */
	public java.util.List<edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.pojos.Experiment> fetchByPictureUrl(java.lang.String... values) {
		return fetch(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.PICTURE_URL, values);
	}

	/**
	 * Fetch records that have <code>picture_license_url IN (values)</code>
	 */
	public java.util.List<edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.pojos.Experiment> fetchByPictureLicenseUrl(java.lang.String... values) {
		return fetch(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.PICTURE_LICENSE_URL, values);
	}

	/**
	 * Fetch records that have <code>question IN (values)</code>
	 */
	public java.util.List<edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.pojos.Experiment> fetchByQuestion(java.lang.String... values) {
		return fetch(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.QUESTION, values);
	}

	/**
	 * Fetch records that have <code>rating_options IN (values)</code>
	 */
	public java.util.List<edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.pojos.Experiment> fetchByRatingOptions(java.lang.String... values) {
		return fetch(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.RATING_OPTIONS, values);
	}

	/**
	 * Fetch records that have <code>titel IN (values)</code>
	 */
	public java.util.List<edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.pojos.Experiment> fetchByTitel(java.lang.String... values) {
		return fetch(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.TITEL, values);
	}

	/**
	 * Fetch records that have <code>max_ratings_per_assignment IN (values)</code>
	 */
	public java.util.List<edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.pojos.Experiment> fetchByMaxRatingsPerAssignment(java.lang.Integer... values) {
		return fetch(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.MAX_RATINGS_PER_ASSIGNMENT, values);
	}

	/**
	 * Fetch records that have <code>max_answers_per_assignment IN (values)</code>
	 */
	public java.util.List<edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.pojos.Experiment> fetchByMaxAnswersPerAssignment(java.lang.Integer... values) {
		return fetch(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.Experiment.EXPERIMENT.MAX_ANSWERS_PER_ASSIGNMENT, values);
	}
}
